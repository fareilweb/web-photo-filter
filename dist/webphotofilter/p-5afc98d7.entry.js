import{r as t,c as e,h as n,g as r}from"./p-e725558e.js";class i{static getFilters(t){return{SEPIA:[1.351,0,0,0,0,1.203,0,0,0,0,.937,0,0,0,0,0,0,0,1,0],BLUE_MONOTONE:[.95,0,0,0,.05,.85,0,0,0,.15,.5,0,0,0,.5,0,0,0,1,0],VIOLENT_TOMATO:[.9,0,0,0,2,.9,0,0,0,-.2,-.2,0,0,0,-.5,-.2,-.2,-.2,1,0],GREYSCALE:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0],DESATURATE:[.2764723002910614,.9297080039978027,.09381970018148422,0,-.14549018442630768,.2764723002910614,.9297080039978027,.09381970018148422,0,-.14549018442630768,.2764723002910614,.9297080039978027,.09381970018148422,0,-.14549018442630768,0,0,0,1,0],BRIGHTNESS:i.brightnessMatrix(t||1.4),SATURATION:i.saturationMatrix(t||1.5),CONTRAST:i.contrastMatrix(t||1.5),HUE:i.hueMatrix(t||90),COOKIE:[.5997023582458496,.3455324172973633,-.27082985639572144,0,.186007559299469,-.0377032496035099,.8609577417373657,.1505955308675766,0,-.14497417211532593,.2411363571882248,-.07441037893295288,.4497218132019043,0,-.029655195772647858,0,0,0,1,0],VINTAGE:[.6279345750808716,.32021835446357727,-.03965408354997635,0,.037848182022571564,.025783976539969444,.6441188454627991,.03259127587080002,0,.02926599606871605,.04660555720329285,-.08512330055236816,.5241647958755493,0,.020232120528817177,0,0,0,1,0],KODA:[1.1285582780838013,-.3967382311820984,-.03992559015750885,0,.24991995096206665,-.1640433967113495,1.0835251808166504,-.05498805269598961,0,.09698984026908875,-.16786010563373566,-.5603416562080383,1.6014851331710815,0,.13972482085227966,0,0,0,1,0],TECHNICOLOR:[1.9125277996063232,-.8545345067977905,-.09155508130788803,0,.046249426901340485,-.3087833523750305,1.7658908367156982,-.10601743310689926,0,-.27589040994644165,-.23110337555408478,-.7501899003982544,1.8475978374481201,0,.12137623876333237,0,0,0,1,0],POLAROID:[1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0],BGR:[0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0]}}static brightnessMatrix(t){return[t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0]}static contrastMatrix(t){let e=-128*(t-1);return i.normalizeMatrix([t,0,0,0,e,0,t,0,0,e,0,0,t,0,e,0,0,0,1,0])}static normalizeMatrix(t){return t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255,t}static hueMatrix(t){t=(t||0)/180*Math.PI;let e=Math.cos(t),n=Math.sin(t),r=.213,i=.715,o=.072;return[r+.787*e+n*-r,i+e*-i+n*-i,o+e*-o+.928*n,0,0,r+e*-r+.143*n,i+e*(1-i)+.14*n,o+e*-o+-.283*n,0,0,r+e*-r+-.787*n,i+e*-i+n*i,o+.928*e+n*o,0,0,0,0,0,1,0]}static saturationMatrix(t){let e=2*(t||0)/3+1,n=-.5*(e-1);return[e,n,n,0,0,n,e,n,0,0,n,n,e,0,0,0,0,0,1,0]}static getFilter(t,e){if(!t||0===t.length)return null;let n=null;return Object.keys(i.getFilters(e)).forEach((r=>{t.toUpperCase()===r&&(n=i.getFilters(e)[r])})),n}}const o=class{constructor(n){t(this,n),this.filterLoad=e(this,"filterLoad",7),this.vertexShaderSource="\n    attribute vec2 a_position;\n    attribute vec2 a_texCoord;\n    uniform vec2 u_resolution;\n    varying vec2 v_texCoord;\n    uniform float flipY;\n\n    void main() {\n       vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0; // convert the rectangle from pixels to clipspace\n       gl_Position = vec4(clipSpace * vec2(1, flipY), 0, 1);\n       v_texCoord = a_texCoord; // pass the texCoord to the fragment shader\n    }\n  ",this.fragmentShaderSource="\n    precision mediump float;\n    uniform sampler2D u_image; // the texture\n    uniform mat4 u_matrix;\n    uniform vec4 u_multiplier;\n    varying vec2 v_texCoord; // the texCoords passed from the vertex shader.\n\n    void main() {\n      vec4 color = texture2D(u_image, v_texCoord);\n      mat4 colMat = mat4(\n      color.r, 0, 0, 0,\n      0, color.g, 0, 0,\n      0, 0, color.b, 0,\n      0, 0, 0, color.a\n      );\n      mat4 product = colMat * u_matrix;\n      color.r = product[0].x + product[0].y + product[0].z + product[0].w + u_multiplier[0];\n      color.g = product[1].x + product[1].y + product[1].z + product[1].w + u_multiplier[1];\n      color.b = product[2].x + product[2].y + product[2].z + product[2].w + u_multiplier[2];\n      color.a = product[3].x + product[3].y + product[3].z + product[3].w  + u_multiplier[3];\n      gl_FragColor = color;\n    }\n  "}createWebGLProgram(t,e,n){const r=(e,n)=>{let r=t.createShader(n);return t.shaderSource(r,e),t.compileShader(r),r};let i=t.createProgram();return t.attachShader(i,r(e,t.VERTEX_SHADER)),t.attachShader(i,r(n,t.FRAGMENT_SHADER)),t.linkProgram(i),t.useProgram(i),i}onFilterChange(){this.applyFilter()}applyFilter(){var t,e,n,r;const o=null===(t=this.filter)||void 0===t?void 0:t.split(","),s=null===(e=null==o?void 0:o.map((t=>{var e;const n=/\((.*)\)/.exec(t),r=n&&n.length>=1?parseFloat(n[1]):this.level;return i.getFilter(null===(e=null==t?void 0:t.replace(/\((.*)\)/,""))||void 0===e?void 0:e.trim(),r)})))||void 0===e?void 0:e.filter((t=>null!==t));if(void 0===s)return null===(n=this.imgRef)||void 0===n||n.classList.add("display-no-filter"),void this.emitFilterApplied(this.imgRef,this.hasValidWegGLContext());null===(r=this.imgRef)||void 0===r||r.classList.remove("display-no-filter"),this.desaturateImage(s)}emitFilterApplied(t,e){this.filterLoad.emit({webGLDetected:e,result:t})}desaturateImage(t){const e=this.createCanvas();let n;try{n=e.getContext("webgl",{preserveDrawingBuffer:!0})}catch(t){return void this.emitFilterApplied(this.imgRef,!1)}if(!n)return void this.emitFilterApplied(this.imgRef,!1);const r=this.createRootTexture(n),i=t.map((()=>this.createFramebufferTexture(n)));t.forEach(((e,o)=>{this.applyMatrix(n,e,o<t.length-1?i[o].target:null,o>0?i[o-1].source:r)})),this.appendCanvas(e),this.emitFilterApplied(e,!0)}createCanvas(){var t,e;const n=document.createElement("canvas");return n.setAttribute("part","canvas"),n.width=null===(t=this.imgRef)||void 0===t?void 0:t.naturalWidth,n.height=null===(e=this.imgRef)||void 0===e?void 0:e.naturalHeight,n}appendCanvas(t){const e=this.el.shadowRoot.querySelector("canvas");e&&this.el.shadowRoot.removeChild(e),this.el.shadowRoot.insertBefore(t,this.el.shadowRoot.firstChild)}createRootTexture(t){const e=t.createTexture();return t.bindTexture(WebGLRenderingContext.TEXTURE_2D,e),t.texParameteri(WebGLRenderingContext.TEXTURE_2D,WebGLRenderingContext.TEXTURE_WRAP_S,WebGLRenderingContext.CLAMP_TO_EDGE),t.texParameteri(WebGLRenderingContext.TEXTURE_2D,WebGLRenderingContext.TEXTURE_WRAP_T,WebGLRenderingContext.CLAMP_TO_EDGE),t.texParameteri(WebGLRenderingContext.TEXTURE_2D,WebGLRenderingContext.TEXTURE_MIN_FILTER,WebGLRenderingContext.NEAREST),t.texParameteri(WebGLRenderingContext.TEXTURE_2D,WebGLRenderingContext.TEXTURE_MAG_FILTER,WebGLRenderingContext.NEAREST),t.texImage2D(WebGLRenderingContext.TEXTURE_2D,0,WebGLRenderingContext.RGBA,WebGLRenderingContext.RGBA,WebGLRenderingContext.UNSIGNED_BYTE,this.imgRef),e}applyMatrix(t,e,n,r){const i=this.createWebGLProgram(t,this.vertexShaderSource,this.fragmentShaderSource),o=t.getUniformLocation(i,"u_resolution");t.uniform2f(o,t.canvas.width,t.canvas.height);const s=e.slice(),a=[];a.push(s.splice(3,1)[0]),a.push(s.splice(8,1)[0]),a.push(s.splice(12,1)[0]),a.push(s.splice(16,1)[0]);const l=t.getUniformLocation(i,"u_matrix");t.uniformMatrix4fv(l,!1,new Float32Array(s));const c=t.getUniformLocation(i,"u_multiplier");t.uniform4f(c,a[0],a[1],a[2],a[3]);const u=t.getAttribLocation(i,"a_position"),d=t.createBuffer();t.bindBuffer(WebGLRenderingContext.ARRAY_BUFFER,d),t.bufferData(WebGLRenderingContext.ARRAY_BUFFER,new Float32Array([0,0,this.imgRef.naturalWidth,0,0,this.imgRef.naturalHeight,0,this.imgRef.naturalHeight,this.imgRef.naturalWidth,0,this.imgRef.naturalWidth,this.imgRef.naturalHeight]),WebGLRenderingContext.STATIC_DRAW),t.enableVertexAttribArray(u),t.vertexAttribPointer(u,2,WebGLRenderingContext.FLOAT,!1,0,0);const h=t.getAttribLocation(i,"a_texCoord"),p=t.createBuffer();t.bindBuffer(WebGLRenderingContext.ARRAY_BUFFER,p),t.bufferData(WebGLRenderingContext.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),WebGLRenderingContext.STATIC_DRAW),t.enableVertexAttribArray(h),t.vertexAttribPointer(h,2,WebGLRenderingContext.FLOAT,!1,0,0),t.bindTexture(WebGLRenderingContext.TEXTURE_2D,r),t.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER,n);const g=null===n,x=t.getUniformLocation(i,"flipY");t.uniform1f(x,g?-1:1),t.drawArrays(WebGLRenderingContext.TRIANGLES,0,6)}createFramebufferTexture(t){const e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);const n=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,n);const r=t.createTexture();return t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.imgRef.naturalWidth,this.imgRef.naturalHeight,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0),t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),{target:e,source:r}}hasValidWegGLContext(){let t,e=document.createElement("canvas");try{t=e.getContext("webgl",{preserveDrawingBuffer:!0})}catch(t){return!1}return t&&t instanceof WebGLRenderingContext}render(){return n("img",{crossOrigin:"anonymous",ref:t=>this.imgRef=t,part:"img",src:this.src,role:"img","aria-hidden":!0,onLoad:()=>this.applyFilter()})}get el(){return r(this)}static get watchers(){return{filter:["onFilterChange"]}}};o.style="img{display:none}img.display-no-filter{display:block}";export{o as web_photo_filter}